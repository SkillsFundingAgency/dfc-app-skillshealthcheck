@using DFC.App.SkillsHealthCheck.Services.SkillsCentral.Enums
@using Microsoft.AspNetCore.Html
@using Microsoft.Extensions.Options
@using DFC.App.SkillsHealthCheck.Models
@inject IOptions<SkillsServiceOptions> _skillServiceOptions;
@model DFC.App.SkillsHealthCheck.ViewModels.Question.EliminationAnswerQuestionViewModel

@{
    var assessmentType = Model.AssessmentType == AssessmentType.Numerical ? "Numerical" : Model.AssessmentType.ToString();
    var id = string.Empty;
    var errorClass = Convert.ToBoolean(ViewData["QuestionAnswerError"]) ? "error" : string.Empty;
}

<h3 class="heading-medium">
    Choose the statement that you feel
    is most like you
</h3>

<form method="post" id="skillsForm" class="form" action="/skills-health-check/question/answer-elimination-question">
    <div class="form-group govuk-!-margin-bottom-5 @errorClass">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-visually-hidden">
                @(new HtmlString(Model.QuestionAnswers.Question.DataHTML?.Replace("src=\"", string.Format("src=\"{0}/", $"{_skillServiceOptions.Value.ImageUrl}/{assessmentType}"))))
            </legend>
            <span class="govuk-error-message">@Html.ValidationMessageFor(model => model.QuestionAnswer)</span>
            @{ var i = 0;
                foreach (var posibleResponse in Model.QuestionAnswers.Answers)
                {
                    if (i != Model.AlreadySelected)
                    {
                        id = string.Format("radio-{0}", posibleResponse.Value);

                        <label class="block-label govuk-label" for="@id">
                            @Html.RadioButtonFor(model => model.QuestionAnswer, i, new { id }) @posibleResponse.Text
                            @if (!string.IsNullOrEmpty(posibleResponse.ImageURL))
                            {
                                <img src="@($"{_skillServiceOptions.Value.ImageUrl}/{posibleResponse.ImageURL}")" alt="Image for @posibleResponse.Text" />
                            }
                        </label> }
                    i++;
                } }
        </fieldset>
    </div>
    <p>You must select an answer to continue.</p>
    <div class="form-group">
        @if (Model.QuestionNumber != Model.ActualTotalQuestions)
        {
            <input class="govuk-button ncs-button__primary" type="submit" name="answerAction" value="Continue" />
        }
        else
        {
            <p>This is the final question.</p>
            <p>Return to the Skills health check page to download your latest report or complete more assessments.</p>
            <input class="govuk-button ncs-button__primary" type="submit" name="answerAction" value="Return to Skills health check page" />
        }

    </div>

    @Html.HiddenFor(model => model.AssessmentType)
    @Html.HiddenFor(model => model.QuestionAnswers.Question.Number)
    @Html.HiddenFor(model => model.AlreadySelected)
    @Html.HiddenFor(model => model.QuestionNumber)
    @Html.HiddenFor(model => model.ActualTotalQuestions)
</form>

