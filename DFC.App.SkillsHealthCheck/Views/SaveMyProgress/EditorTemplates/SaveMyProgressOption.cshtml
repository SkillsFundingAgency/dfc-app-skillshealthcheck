@using DFC.App.SkillsHealthCheck.ViewModels.SaveMyProgress
@using DFC.App.SkillsHealthCheck.Enums
@using DFC.App.SkillsHealthCheck.Extensions

@model SaveMyProgressOption?

@{
    var showErrorClass = string.Empty;
    var errorKey = nameof(SaveMyProgressViewModel.SelectedOption);

    if (ViewData.ModelState.Keys.Contains(errorKey))
    {
        if (ViewData.ModelState[errorKey] != null && ViewData.ModelState[errorKey].Errors.Any())
        {
            showErrorClass = "govuk-form-group--error";
        }
    }
}

<div class="govuk-form-group @showErrorClass">
    @Html.ValidationMessageFor(model => model, string.Empty, new { @class = "govuk-error-message", @id = nameof(SaveMyProgressViewModel.SelectedOption) + "-error" })

    <div class="govuk-radios">
        @foreach (var option in (SaveMyProgressOption[])Enum.GetValues(typeof(SaveMyProgressOption)))
        {
            if (option != SaveMyProgressOption.None)
            {
                var radioId = $"{option}-option";
                var showChecked = Model == option ? "checked=checked" : string.Empty;

                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" name="@nameof(SaveMyProgressViewModel.SelectedOption)" id="@radioId" type="radio" @showChecked value="@option" data-val="true" data-val-required="@SaveMyProgressViewModel.SelectedOptionValidationError">
                    <label class="govuk-label govuk-radios__label" for="@radioId">@option.GetDescription()</label>
                </div>
            }
        }
    </div>
</div>
