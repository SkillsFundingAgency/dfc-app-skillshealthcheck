parameters:
  AzureSubscription: ""
  SetEsfaResourceGroupTagsScript: "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/PSScripts/Set-EsfaResourceGroupTags.ps1"
  EnvironmentTag: ""
  ParentBusiness: ""
  ServiceOffering: ""
  ResourceGroup: ""
  DfCDevopsPath: ""
  Location: "West Europe"
  ArmTemplateFolder: ""
  ArmOutputVariableName: "ARMOutputs"
  AppSharedResourceGroup: ""
  appSharedCosmosDBName: ""
  ApiAppServiceName: ""
  PSScriptPath: ""

steps:
  - checkout: dfc-devops
    path: "s/dfc-devops/"

  - powershell: |
      Invoke-WebRequest -Uri "${{ parameters.SetEsfaResourceGroupTagsScript }}" -OutFile "${{ variables['System.DefaultWorkingDirectory']}}/Set-EsfaResourceGroupTags.ps1"
    displayName: "Download scripts from dfc-devops repo"

  - task: AzurePowerShell@5
    displayName: "Create resource groups with tags"
    inputs:
      azureSubscription: "${{ parameters.AzureSubscription }}"
      ScriptType: FilePath
      ScriptPath: "${{ variables['System.DefaultWorkingDirectory'] }}/Set-EsfaResourceGroupTags.ps1"
      ScriptArguments: '-ResourceGroupName "${{ parameters.ResourceGroup }}" -Environment "${{ parameters.EnvironmentTag }}" -ParentBusiness "${{ parameters.ParentBusiness }}" -ServiceOffering "${{ parameters.ServiceOffering }}" -Verbose'
      pwsh: true
      azurePowerShellVersion: LatestVersion

  - task: AzurePowerShell@5
    displayName: "Test if cosmos database exists"
    inputs:
      azureSubscription: "${{ parameters.AzureSubscription }}"
      ScriptPath: "${{ parameters.DfCDevopsPath }}/PSCoreScripts/Test-CosmosDbDatabaseDoesntExist.ps1"
      ScriptArguments: "-ResourceGroup ${{ parameters.AppSharedResourceGroup }} -CosmosDbAccountName ${{ parameters.appSharedCosmosDBName }} -DatabaseName dfc-app-skillshealthcheck"
      azurePowerShellVersion: LatestVersion
      FailOnStandardError: true

  - task: esfadevops.Tokenization.custom-build-task.Tokenization@0
    displayName: "Tokenization: Transform file parameters.json"
    inputs:
      SourcePath: "${{ parameters.ArmTemplateFolder }}"
      TargetFileNames: parameters.json

  - task: AzureResourceGroupDeployment@2
    displayName: "Azure Deployment:Create Or Update Resource Group action on ${{ parameters.ResourceGroup }}"
    inputs:
      azureSubscription: "${{ parameters.AzureSubscription }}"
      resourceGroupName: "${{ parameters.ResourceGroup }}"
      location: "${{ parameters.Location }}"
      csmFile: "${{ parameters.ArmTemplateFolder }}/template.json"
      csmParametersFile: "${{ parameters.ArmTemplateFolder }}/parameters.json"
      deploymentOutputs: ARMOutputs

  - task: DeleteFiles@1
    displayName: "Delete tokenised parameters.json file"
    inputs:
      SourceFolder: "${{ parameters.ArmTemplateFolder }}"
      Contents: parameters.json
    condition: always()

  - task: AzurePowerShell@5
    displayName: 'Create System Assigned Identity SQL user for API'
    inputs:
      azureSubscription: '${{ parameters.AzureSubscription }}'
      ScriptType: FilePath
      ScriptPath: '${{ parameters.PSScriptPath }}/Set-SqlSmis.ps1'
      ScriptArguments: "-SqlServerName $(sharedSqlServerName) -SqlDatabaseName $(SqlDatabaseName) -ApiSMI $(ApiAppServiceName) -ApiSMIStaging '$(ApiAppServiceName)/slots/staging' -Verbose"
      pwsh: true
      azurePowerShellVersion: LatestVersion

  - task: AzurePowerShell@5
    displayName: 'Create System Assigned Identity SQL user for function app'
    inputs:
      azureSubscription: '${{ parameters.AzureSubscription }}'
      ScriptType: FilePath
      ScriptPath: '${{ parameters.PSScriptPath }}/Set-SqlSmis.ps1'
      ScriptArguments: "-SqlServerName $(sharedSqlServerName) -SqlDatabaseName $(SqlDatabaseName) -ApiSMI $(FunctionAppName) -ApiSMIStaging '$(FunctionAppName)/slots/staging' -Verbose"
      pwsh: true
      azurePowerShellVersion: LatestVersion