{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "appSharedResourceGroup": {
      "type": "string"
    },
    "appSharedStorageAccountName": {
      "type": "string"
    },
    "CosmosDbResourceGroup": {
      "type": "string"
    },
    "cosmosDbName": {
      "type": "string"
    },
    "cosmosDbKey": {
      "type": "securestring"
    },
    "environment": {
      "type": "string"
    },
    "cosmosDBCollectionName": {
      "type": "string"
    },
    "appDatabaseNeedsCreation": {
      "type": "bool"
    },
    "appDatabaseThroughput": {
      "type": "int"
    },
    "enableAlerts": {
      "type": "bool"
    },
    "SubscriptionSettingsEndpoint": {
      "type": "string"
    },
    "apimCompositeApiKey": {
      "type": "securestring"
    },
    "SubscriptionSettingsFilterIncludeEventTypes3": {
      "type": "string"
    },
    "SubscriptionSettingsFilterIncludeEventTypes4": {
      "type": "string"
    },
    "SubscriptionSettingsFilterPropertyContainsFilters0Values0": {
      "type": "string"
    },
    "ApplicationName": {
      "type": "string"
    },
    "contentUrl": {
      "type": "string"
    },
    "subscriptionUrl": {
      "type": "string"
    },
    "ApimResourceGroup": {
      "type": "string"
    },
    "ApimLoggerName": {
      "type": "string"
    },
    "ApimProductInstanceName": {
      "type": "string"
    },
    "ApimServiceName": {
      "type": "string"
    },
    "ApiName": {
      "type": "string"
    },
    "ApiUrl": {
      "type": "string"
    },
    "ExceptionCountThreshold": {
      "type": "string"
    },
    "CPUPercentageThreshold": {
      "type": "string"
    },
    "MemoryPercentageThreshold": {
      "type": "string"
    },
    "LoggingLogLevelDefault": {
      "type": "string",
      "metadata": {
        "description": "Logging__LogLevel__Default"
      }
    },
    "SkillsServiceOptionsImageUrl": {
      "type": "string"
    },
    "GovNotifyOptionsAPIKey": {
      "type": "string"
    },
    "GovNotifyOptionsEmailTemplateId": {
      "type": "string"
    },
    "GovNotifyOptionsSmsTemplateId": {
      "type": "string"
    },
    "SkillsCentralServiceEndpoint": {
      "type": "string"
    },
    "CompositeBaseUrl": {
      "type": "string"
    },
    "SessionStateOptionsTtl": {
      "type": "string",
      "metadata": {
        "description": "session state options ttl"
      }
    },
    "workspaceName": {
      "type": "string"
    },
    "workspaceResourceGroup": {
      "type": "string"
    },
    "SqlElasticPoolName": {
      "type": "string"
    },
    "SqlServerName": {
      "type": "string"
    },
    "SqlResourceGroupName": {
      "type": "string"
    }
  },
    "variables": {
        "ApiName": "[concat(parameters('ApimProductInstanceName'), '-', parameters('ApiName'))]",
        "appServicePlanName": "[concat(variables('resourcePrefix'), '-asp')]",
        "appServicePlanResourceGroup": "[concat(variables('resourcePrefix'),'-rg')]",
        "buildingBlocksDfcBaseUrl": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
        "cosmosDbDatabaseName": "dfc-app-skillshealthcheck",
        "cosmosDbCollectionPartitionKey": "/PartitionKey",
        "cosmosDbEndpoint": "[concat('https://', parameters('cosmosDbName'), '.documents.azure.com:443/')]",
        "resourcePrefix": "[tolower(concat('dfc-', parameters('Environment'), '-app-skillshealthcheck'))]",
        "apiresourcePrefix": "[tolower(concat('dfc-', parameters('Environment'), '-app-skillscentral'))]",
        "webAppName": "[concat(variables('ResourcePrefix'), '-as')]",
        "apiAppName": "[concat(variables('apiResourcePrefix'), '-api-as')]",
        "webAppInsightsName": "[concat(variables('resourcePrefix'), '-ai')]",
        "apiAppInsightsName": "[concat(variables('apiresourcePrefix'), '-api-ai')]",
        "cosmosDBSessionStateCollectionName": "session-state",
        "ActionGroupName": "[concat('dfc-', replace(tolower(parameters('Environment')), '-draft', ''), '-app-sharedresources-actgrp')]",
        "DatabaseName": "[concat(variables('apiResourcePrefix'), '-db')]",
        "DatabaseTier": "[if(equals(parameters('SqlElasticPoolName'), ''), 'Standard', 'ElasticPool')]"
    },
    "resources": [
        {
            "name": "[variables('ApiName')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('ApimResourceGroup')]",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'APIM/apim-api.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apimLoggerName": {
                        "value": "[parameters('ApimLoggerName')]"
                    },
                    "apimProductInstanceName": {
                        "value": "[parameters('ApimProductInstanceName')]"
                    },
                    "apimServiceName": {
                        "value": "[parameters('ApimServiceName')]"
                    },
                    "apiName": {
                        "value": "[variables('ApiName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('webAppInsightsName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('buildingBlocksDfcBaseUrl'), 'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('webAppInsightsName')]"
                    },
                    "attachedService": {
                        "value": ""
                    },
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "workspaceResourceGroup": {
                        "value": "[parameters('workspaceResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('apiAppInsightsName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('buildingBlocksDfcBaseUrl'), 'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('apiAppInsightsName')]"
                    },
                    "attachedService": {
                        "value": ""
                    },
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "workspaceResourceGroup": {
                        "value": "[parameters('workspaceResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('WebAppName')]",
            "type": "Microsoft.Resources/deployments",
          "dependsOn": [
            "[variables('webAppInsightsName')]"
          ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('buildingBlocksDfcBaseUrl'), 'app-service.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('webAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('appServicePlanResourceGroup')]"
                    },
                    "appServiceType": {
                        "value": "app"
                    },
                    "deployStagingSlot": {
                        "value": true
                    },
                    "clientAffinity": {
                        "value": false
                    },
                    "appServiceAppSettings": {
                        "value": [
                            {
                                "name": "MSDEPLOY_RENAME_LOCKED_FILES",
                                "value": "1"
                            },
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference(variables('webAppInsightsName')).outputs.InstrumentationKey.value]"
                            },
                            {
                                "name": "AzureWebJobsStorage",
                                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('appSharedStorageAccountName'),';AccountKey=',listKeys(resourceId(parameters('appSharedResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('appSharedStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
                            },
                            {
                                "name": "WEBSITE_RUN_FROM_PACKAGE",
                                "value": "1"
                            },
                            {
                                "name": "WEBSITE_ADD_SITENAME_BINDINGS_IN_APPHOST_CONFIG",
                                "value": "1"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__SharedContent__AccessKey",
                                "value": "[parameters('cosmosDbKey')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__SharedContent__EndpointUrl",
                                "value": "[variables('cosmosDbEndpoint')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__SharedContent__DatabaseId",
                                "value": "[variables('cosmosDbDatabaseName')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__SharedContent__CollectionId",
                                "value": "[parameters('cosmosDbCollectionName')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__SharedContent__PartitionKey",
                                "value": "[variables('cosmosDbCollectionPartitionKey')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__SessionState__AccessKey",
                                "value": "[parameters('cosmosDbKey')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__SessionState__EndpointUrl",
                                "value": "[variables('cosmosDbEndpoint')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__SessionState__DatabaseId",
                                "value": "[variables('cosmosDbDatabaseName')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__SessionState__CollectionId",
                                "value": "[variables('cosmosDBSessionStateCollectionName')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__SessionState__PartitionKey",
                                "value": "[variables('cosmosDbCollectionPartitionKey')]"
                            },
                            {
                                "name": "CmsApiClientOptions__BaseAddress",
                                "value": "[parameters('contentUrl')]"
                            },
                            {
                                "name": "CmsApiClientOptions__SummaryEndpoint",
                                "value": "/pagebanner"
                            },
                            {
                                "name": "CmsApiClientOptions__Timeout",
                                "value": "00:00:30"
                            },
                            {
                                "name": "CmsApiClientOptions__StaticContentEndpoint",
                                "value": "/sharedcontent/"
                            },
                            {
                                "name": "CmsApiClientOptions__ContentIds",
                                "value": "2c9da1b3-3529-4834-afc9-9cd741e59788"
                            },
                            {
                                "name": "SkillsServiceOptions__ImageUrl",
                                "value": "[parameters('SkillsServiceOptionsImageUrl')]"
                            },
                            {
                                "name": "SkillsCentralSettings__SkillsCentralApiUrl",
                                "value": "[concat(parameters('ApiUrl'), '/api/')]"
                            },
                            {
                                "name": "Configuration__ApplicationName",
                                "value": "[parameters('ApplicationName')]"
                            },
                            {
                                "name": "Policies__HttpCircuitBreaker__DurationOfBreak",
                                "value": "00:01:00"
                            },
                            {
                                "name": "Policies__HttpCircuitBreaker__ExceptionsAllowedBeforeBreaking",
                                "value": 3
                            },
                            {
                                "name": "Policies__HttpRetry__BackoffPower",
                                "value": 2
                            },
                            {
                                "name": "Policies__HttpRetry__Count",
                                "value": 3
                            },
                            {
                                "name": "SubscriptionSettings__Filter__IncludeEventTypes__0",
                                "value": "published"
                            },
                            {
                                "name": "SubscriptionSettings__Filter__IncludeEventTypes__1",
                                "value": "unpublished"
                            },
                            {
                                "name": "SubscriptionSettings__Filter__IncludeEventTypes__2",
                                "value": "deleted"
                            },
                            {
                                "name": "SubscriptionSettings__Filter__IncludeEventTypes__3",
                                "value": "[parameters('SubscriptionSettingsFilterIncludeEventTypes3')]"
                            },
                            {
                                "name": "SubscriptionSettings__Filter__IncludeEventTypes__4",
                                "value": "[parameters('SubscriptionSettingsFilterIncludeEventTypes4')]"
                            },
                            {
                                "name": "SubscriptionSettings__Endpoint",
                                "value": "[concat(parameters('SubscriptionSettingsEndpoint'),'/api/webhook/ReceiveEvents?subscription-key=',parameters('apimCompositeApiKey'))]"
                            },
                            {
                                "name": "SubscriptionSettings__SubscriptionServiceEndpoint",
                                "value": "[concat(parameters('subscriptionUrl'),'/api/Execute')]"
                            },
                            {
                                "name": "SubscriptionSettings__Filter__PropertyContainsFilters__0__Key",
                                "value": "subject"
                            },
                            {
                                "name": "SubscriptionSettings__Filter__PropertyContainsFilters__0__Values__0",
                                "value": "[parameters('SubscriptionSettingsFilterPropertyContainsFilters0Values0')]"
                            },
                            {
                                "name": "Logging__LogLevel__Default",
                                "value": "[parameters('LoggingLogLevelDefault')]"
                            },
                            {
                                "name": "GovNotifyOptions__APIKey",
                                "value": "[parameters('GovNotifyOptionsAPIKey')]"
                            },
                            {
                                "name": "GovNotifyOptions__EmailTemplateId",
                                "value": "[parameters('GovNotifyOptionsEmailTemplateId')]"
                            },
                            {
                                "name": "GovNotifyOptions__SmsTemplateId",
                                "value": "[parameters('GovNotifyOptionsSmsTemplateId')]"
                            },
                            {
                                "name": "SkillsCentralServiceEndpoint",
                                "value": "[parameters('SkillsCentralServiceEndpoint')]"
                            },
                            {
                                "name": "CompositeBaseUrl",
                                "value": "[parameters('CompositeBaseUrl')]"
                            },
                            {
                                "name": "SessionStateOptions__Ttl",
                                "value": "[parameters('SessionStateOptionsTtl')]"
                            }
                        ]
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('apiAppName')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('apiAppInsightsName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('buildingBlocksDfcBaseUrl'), 'app-service.json')]",
                    "contentVersion": "1.0.0.0"
                },

                "parameters": {
                    "appServiceName": {
                        "value": "[variables('apiAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('appServicePlanResourceGroup')]"
                    },
                    "appServiceType": {
                        "value": "app"
                    },
                    "deployStagingSlot": {
                        "value": true
                    },
                    "clientAffinity": {
                        "value": false
                    },
                    "appServiceConnectionStrings": {
                        "value": [
                            {
                                "name": "DefaultConnection",
                                "connectionString": "[concat('Server=tcp:',parameters('SqlServerName'),'.database.windows.net,1433;Initial Catalog=',variables('DatabaseName'),';Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;Authentication=\"Active Directory Default\";')]",
                                "type": "SQLServer"
                            }
                        ]
                    },
                    "appServiceAppSettings": {
                        "value": [
                            {
                                "name": "MSDEPLOY_RENAME_LOCKED_FILES",
                                "value": "1"
                            },
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference(variables('webAppInsightsName')).outputs.InstrumentationKey.value]"
                            },
                            {
                                "name": "AzureWebJobsStorage",
                                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('appSharedStorageAccountName'),';AccountKey=',listKeys(resourceId(parameters('appSharedResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('appSharedStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
                            },
                            {
                                "name": "WEBSITE_RUN_FROM_PACKAGE",
                                "value": "1"
                            },
                            {
                                "name": "WEBSITE_ADD_SITENAME_BINDINGS_IN_APPHOST_CONFIG",
                                "value": "1"
                            },
                            {
                                "name": "CmsApiClientOptions__BaseAddress",
                                "value": "[parameters('contentUrl')]"
                            },
                            {
                                "name": "CmsApiClientOptions__SummaryEndpoint",
                                "value": "/pagebanner"
                            },
                            {
                                "name": "CmsApiClientOptions__Timeout",
                                "value": "00:00:30"
                            },
                            {
                                "name": "CmsApiClientOptions__StaticContentEndpoint",
                                "value": "/sharedcontent/"
                            },
                            {
                                "name": "CmsApiClientOptions__ContentIds",
                                "value": "2c9da1b3-3529-4834-afc9-9cd741e59788"
                            },
                            {
                                "name": "SkillsServiceOptions__ImageUrl",
                                "value": "[parameters('SkillsServiceOptionsImageUrl')]"
                            },
                            {
                                "name": "Configuration__ApplicationName",
                                "value": "[parameters('ApplicationName')]"
                            },
                            {
                                "name": "Policies__HttpCircuitBreaker__DurationOfBreak",
                                "value": "00:01:00"
                            },
                            {
                                "name": "Policies__HttpCircuitBreaker__ExceptionsAllowedBeforeBreaking",
                                "value": 3
                            },
                            {
                                "name": "Policies__HttpRetry__BackoffPower",
                                "value": 2
                            },
                            {
                                "name": "Policies__HttpRetry__Count",
                                "value": 3
                            },
                            {
                                "name": "Logging__LogLevel__Default",
                                "value": "[parameters('LoggingLogLevelDefault')]"
                            },
                            {
                                "name": "GovNotifyOptions__APIKey",
                                "value": "[parameters('GovNotifyOptionsAPIKey')]"
                            },
                            {
                                "name": "GovNotifyOptions__EmailTemplateId",
                                "value": "[parameters('GovNotifyOptionsEmailTemplateId')]"
                            },
                            {
                                "name": "GovNotifyOptions__SmsTemplateId",
                                "value": "[parameters('GovNotifyOptionsSmsTemplateId')]"
                            },
                            {
                                "name": "SkillsCentralServiceEndpoint",
                                "value": "[parameters('SkillsCentralServiceEndpoint')]"
                            },
                            {
                                "name": "CompositeBaseUrl",
                                "value": "[parameters('CompositeBaseUrl')]"
                            },
                            {
                                "name": "SessionStateOptions__Ttl",
                                "value": "[parameters('SessionStateOptionsTtl')]"
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "[variables('CosmosDbDatabaseName')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('CosmosDbResourceGroup')]",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'),'CosmosDb/cosmos-database.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "accountName": {
                        "value": "[parameters('CosmosDbName')]"
                    },
                    "databaseName": {
                        "value": "[variables('CosmosDbDatabaseName')]"
                    },
                    "useSharedRequestUnits": {
                        "value": true
                    },
                    "offerThroughput": {
                        "value": "[parameters('appDatabaseThroughput')]"
                    },
                    "databaseNeedsCreation": {
                        "value": "[parameters('appDatabaseNeedsCreation')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[parameters('cosmosDbCollectionName')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('CosmosDbDatabaseName')]"
            ],
            "resourceGroup": "[parameters('CosmosDbResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'CosmosDb/cosmos-collection.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "accountName": {
                        "value": "[parameters('cosmosDbName')]"
                    },
                    "databaseName": {
                        "value": "[variables('cosmosDbDatabaseName')]"
                    },
                    "collectionName": {
                        "value": "[parameters('cosmosDbCollectionName')]"
                    },
                    "provisionRequestUnits": {
                        "value": false
                    },
                    "partitionKey": {
                        "value": "[variables('cosmosDbCollectionPartitionKey')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('cosmosDBSessionStateCollectionName')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('CosmosDbDatabaseName')]"
            ],
            "resourceGroup": "[parameters('CosmosDbResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'CosmosDb/cosmos-collection.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "accountName": {
                        "value": "[parameters('cosmosDbName')]"
                    },
                    "databaseName": {
                        "value": "[variables('cosmosDbDatabaseName')]"
                    },
                    "collectionName": {
                        "value": "[variables('cosmosDBSessionStateCollectionName')]"
                    },
                    "provisionRequestUnits": {
                        "value": false
                    },
                    "partitionKey": {
                        "value": "[variables('cosmosDbCollectionPartitionKey')]"
                    },
                    "timeToLive": {
                        "value": -1
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('DatabaseName')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('SqlResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'SqlServer/sql-database.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "databaseName": {
                        "value": "[variables('DatabaseName')]"
                    },
                    "sqlServerName": {
                        "value": "[parameters('SqlServerName')]"
                    },
                    "elasticPoolName": {
                        "value": "[parameters('SqlElasticPoolName')]"
                    },
                    "databaseTier": {
                        "value": "[variables('DatabaseTier')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('webAppInsightsName'), '-metric-exceptions')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('webAppInsightsName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "alertName": {
                        "value": "[concat(variables('webAppInsightsName'), '-metric-exceptions')]"
                    },
                    "alertSeverity": {
                        "value": 3
                    },
                    "metricName": {
                        "value": "exceptions/count"
                    },
                    "operator": {
                        "value": "GreaterThan"
                    },
                    "threshold": {
                        "value": "[parameters('ExceptionCountThreshold')]"
                    },
                    "aggregation": {
                        "value": "Count"
                    },
                    "windowSize": {
                        "value": "PT5M"
                    },
                    "evaluationFrequency": {
                        "value": "PT1M"
                    },
                    "actionGroupName": {
                        "value": "[variables('ActionGroupName')]"
                    },
                    "actionGroupResourceGroup": {
                        "value": "[parameters('appSharedResourceGroup')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.Insights/Components', variables('webAppInsightsName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('webAppInsightsName'), '-failure-anomaly-v2')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('webAppInsightsName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/failure-anomaly-rule.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "alertName": {
                        "value": "[concat(variables('webAppInsightsName'), '-failure-anomaly-v2')]"
                    },
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.Insights/Components', variables('webAppInsightsName'))]"
                    },
                    "actionGroupId": {
                        "value": "[resourceId(parameters('appSharedResourceGroup'), 'microsoft.insights/actionGroups', variables('ActionGroupName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('apiAppInsightsName'), '-metric-exceptions')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('apiAppInsightsName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "alertName": {
                        "value": "[concat(variables('apiAppInsightsName'), '-metric-exceptions')]"
                    },
                    "alertSeverity": {
                        "value": 3
                    },
                    "metricName": {
                        "value": "exceptions/count"
                    },
                    "operator": {
                        "value": "GreaterThan"
                    },
                    "threshold": {
                        "value": "[parameters('ExceptionCountThreshold')]"
                    },
                    "aggregation": {
                        "value": "Count"
                    },
                    "windowSize": {
                        "value": "PT5M"
                    },
                    "evaluationFrequency": {
                        "value": "PT1M"
                    },
                    "actionGroupName": {
                        "value": "[variables('ActionGroupName')]"
                    },
                    "actionGroupResourceGroup": {
                        "value": "[parameters('appSharedResourceGroup')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.Insights/Components', variables('apiAppInsightsName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('apiAppInsightsName'), '-failure-anomaly-v2')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('apiAppInsightsName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/failure-anomaly-rule.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "alertName": {
                        "value": "[concat(variables('apiAppInsightsName'), '-failure-anomaly-v2')]"
                    },
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.Insights/Components', variables('apiAppInsightsName'))]"
                    },
                    "actionGroupId": {
                        "value": "[resourceId(parameters('appSharedResourceGroup'), 'microsoft.insights/actionGroups', variables('ActionGroupName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('AppServicePlanName'), '-CPUPercentage')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('webAppInsightsName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "alertName": {
                        "value": "[concat(variables('AppServicePlanName'), '-metric-CPUPercentage')]"
                    },
                    "alertSeverity": {
                        "value": 3
                    },
                    "metricName": {
                        "value": "CpuPercentage"
                    },
                    "operator": {
                        "value": "GreaterThanOrEqual"
                    },
                    "threshold": {
                        "value": "[parameters('CPUPercentageThreshold')]"
                    },
                    "aggregation": {
                        "value": "Average"
                    },
                    "windowSize": {
                        "value": "PT5M"
                    },
                    "evaluationFrequency": {
                        "value": "PT1M"
                    },
                    "actionGroupName": {
                        "value": "[variables('ActionGroupName')]"
                    },
                    "actionGroupResourceGroup": {
                        "value": "[parameters('appSharedResourceGroup')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.Web/serverFarms', variables('AppServicePlanName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('AppServicePlanName'), '-MemoryPercentage')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('webAppInsightsName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "alertName": {
                        "value": "[concat(variables('AppServicePlanName'), '-metric-MemoryPercentage')]"
                    },
                    "alertSeverity": {
                        "value": 3
                    },
                    "metricName": {
                        "value": "MemoryPercentage"
                    },
                    "operator": {
                        "value": "GreaterThanOrEqual"
                    },
                    "threshold": {
                        "value": "[parameters('MemoryPercentageThreshold')]"
                    },
                    "aggregation": {
                        "value": "Average"
                    },
                    "windowSize": {
                        "value": "PT5M"
                    },
                    "evaluationFrequency": {
                        "value": "PT1M"
                    },
                    "actionGroupName": {
                        "value": "[variables('ActionGroupName')]"
                    },
                    "actionGroupResourceGroup": {
                        "value": "[parameters('appSharedResourceGroup')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.Web/serverFarms', variables('AppServicePlanName'))]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}